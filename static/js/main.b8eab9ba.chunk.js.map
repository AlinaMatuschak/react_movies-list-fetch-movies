{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/movies.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMoviesByTitle","fetch","then","respons","json","FindMovie","React","memo","addMovie","useState","setMovie","setTitle","error","setError","useEffect","htmlFor","type","id","placeholder","ClassNames","value","onChange","target","onClick","findedMovie","Title","Error","Plot","Poster","imdbID","catch","err","console","warn","disabled","event","preventDefault","App","data","setMovies","some","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"+wEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,yBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,sBCRjC,SAASG,EAAiBd,GAC/B,OAAOe,MAAM,GAAD,OAHE,0BAGF,mBAJE,WAIF,cAAmCf,IAC5CgB,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UCGtB,IAAMC,EAAYC,IAAMC,MAAK,YAAmB,IAAhBC,EAAe,EAAfA,SAAe,EAC1BC,mBAAS,MADiB,mBAC7CZ,EAD6C,KACtCa,EADsC,OAE1BD,mBAAS,IAFiB,mBAE7CvB,EAF6C,KAEtCyB,EAFsC,OAG1BF,mBAAS,MAHiB,mBAG7CG,EAH6C,KAGtCC,EAHsC,KAkCpD,OA7BAC,qBAAU,kBAAMD,EAAS,QAAO,CAAC3B,IA8B/B,oCACE,0BAAMI,UAAU,cACd,yBAAKA,UAAU,SACb,2BAAOA,UAAU,QAAQyB,QAAQ,eAAjC,eAIA,yBAAKzB,UAAU,WACb,2BACE0B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ5B,UAAW6B,IAAW,QAAS,CAC7B,YAAaP,IAEfQ,MAAOlC,EACPmC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBX,EAASW,EAAOF,WAI7CR,GACC,uBAAGtB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACE0B,KAAK,SACL1B,UAAU,kBACViC,QA5DZ,WACEvB,EAAiBd,GACdgB,MAAK,SAACsB,GACL,IAAKA,EAAYC,MAIf,OAHAZ,EAASW,EAAYE,YACrBhB,EAAS,MAKXA,EAAS,CACPxB,MAAOsC,EAAYC,MACnBtC,YAAaqC,EAAYG,KACzBvC,OAAQoC,EAAYI,OACpBvC,QAAQ,8BAAD,OAAgCmC,EAAYK,QACnD9B,OAAQyB,EAAYK,YAIvBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,KAAKF,QAsCrB,iBASF,yBAAKzC,UAAU,WACb,4BACE0B,KAAK,SACL1B,UAAU,oBACV4C,UAAWrC,EACX0B,QAAS,SAACY,GACRA,EAAMC,iBACN5B,EAASX,GAlDrBc,EAAS,IACTD,EAAS,QA2CD,sBAgBLb,GACC,yBAAKP,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAcO,Q,OC9FzBG,EAAiB,MAEV,IAAMqC,EAAM,WAAO,IAAD,EACK5B,mBAAS6B,GADd,mBAChB3C,EADgB,KACR4C,EADQ,KAWvB,OACE,yBAAKjD,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYK,OAAQA,KAEtB,yBAAKL,UAAU,WACb,kBAAC,EAAD,CAAWkB,SAdjB,SAAkBX,GACZF,EAAO6C,MAAK,qBAAGzC,SAAwBF,EAAME,WAIjDwC,GAAU,SAAAE,GAAa,4BAAQA,GAAR,CAAuB5C,aCZlD6C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b8eab9ba.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"/images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\r\n\r\nimport './MoviesList.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({\r\n  movies = [],\r\n}) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      imdbId: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n","const API_KEY = 'db946b80';\nconst API_URL = 'http://www.omdbapi.com/';\n\nexport function getMoviesByTitle(title) {\n  return fetch(`${API_URL}?apikey=${API_KEY}&t=${title}`)\n    .then(respons => respons.json());\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMoviesByTitle } from '../../api/movies';\n\nexport const FindMovie = React.memo(({ addMovie }) => {\n  const [movie, setMovie] = useState(null);\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => setError(null), [title]);\n\n  function getMovie() {\n    getMoviesByTitle(title)\n      .then((findedMovie) => {\n        if (!findedMovie.Title) {\n          setError(findedMovie.Error);\n          setMovie(null);\n\n          return;\n        }\n\n        setMovie({\n          title: findedMovie.Title,\n          description: findedMovie.Plot,\n          imgUrl: findedMovie.Poster,\n          imdbUrl: `https://www.imdb.com/title/${findedMovie.imdbID}`,\n          imdbId: findedMovie.imdbID,\n        });\n      })\n      // eslint-disable-next-line no-console\n      .catch(err => console.warn(err));\n  }\n\n  function reset() {\n    setTitle('');\n    setMovie(null);\n  }\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={ClassNames('input', {\n                'is-danger': error,\n              })}\n              value={title}\n              onChange={({ target }) => setTitle(target.value)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={(event) => {\n                event.preventDefault();\n                addMovie(movie);\n                reset();\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...movie} />\n        </div>\n      )}\n    </>\n  );\n});\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\nimport { getMoviesByTitle } from './api/movies';\n\ngetMoviesByTitle('yt');\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  function addMovie(movie) {\n    if (movies.some(({ imdbId }) => imdbId === movie.imdbId)) {\n      return;\n    }\n\n    setMovies(currentMovies => [...currentMovies, movie]);\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}